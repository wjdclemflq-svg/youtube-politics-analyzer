name: Dynamic YouTube Politics Collector (3 Keys)

on:
  schedule:
    - cron: '0 */6 * * *'  # 6시간마다
  workflow_dispatch:
    inputs:
      channel_limit:
        description: 'Maximum channels to analyze'
        required: false
        default: '90'
      use_rotation:
        description: 'Use API key rotation'
        required: false
        default: 'true'
        type: boolean

permissions:
  contents: write
  issues: write

jobs:
  collect-and-analyze:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          npm init -y
          npm install googleapis
      
      - name: Set environment variables
        run: |
          # 3개 API 키 설정
          echo "YOUTUBE_API_KEY_1=${{ secrets.YOUTUBE_API_KEY_1 }}" >> $GITHUB_ENV
          echo "YOUTUBE_API_KEY_2=${{ secrets.YOUTUBE_API_KEY_2 }}" >> $GITHUB_ENV
          echo "YOUTUBE_API_KEY_3=${{ secrets.YOUTUBE_API_KEY_3 }}" >> $GITHUB_ENV
          
          # 구버전 호환성을 위한 기본 키
          echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY_1 }}" >> $GITHUB_ENV
          
          echo "CHANNEL_LIMIT=${{ github.event.inputs.channel_limit || '90' }}" >> $GITHUB_ENV
          echo "USE_ROTATION=${{ github.event.inputs.use_rotation || 'true' }}" >> $GITHUB_ENV
      
      - name: Check API Keys
        run: |
          echo "🔑 Checking API Keys..."
          key_count=0
          
          if [ ! -z "$YOUTUBE_API_KEY_1" ]; then
            echo "✅ API Key #1 is set"
            key_count=$((key_count + 1))
          fi
          
          if [ ! -z "$YOUTUBE_API_KEY_2" ]; then
            echo "✅ API Key #2 is set"
            key_count=$((key_count + 1))
          fi
          
          if [ ! -z "$YOUTUBE_API_KEY_3" ]; then
            echo "✅ API Key #3 is set"
            key_count=$((key_count + 1))
          fi
          
          echo "📊 Total API Keys available: $key_count"
          
          if [ $key_count -eq 0 ]; then
            echo "❌ No API keys configured!"
            exit 1
          fi
      
      - name: Discover Channels with Rotation
        run: |
          if [ "$USE_ROTATION" == "true" ] && [ -f "scripts/discover-channels-rotation.js" ]; then
            echo "🔄 Using 3-key rotation system..."
            node scripts/discover-channels-rotation.js
          else
            echo "📝 Using single key system..."
            node scripts/discover-channels.js
          fi
      
      - name: Analyze Videos and Shorts
        continue-on-error: true
        run: |
          if [ -f "data/channels.json" ]; then
            echo "📹 Analyzing videos..."
            node scripts/analyze-videos.js || echo "Some videos could not be analyzed"
          else
            echo "⚠️ No channels.json found"
          fi
      
      - name: Generate Statistics Report
        run: |
          if [ -f "data/channels.json" ]; then
            echo "📊 Channel Statistics:"
            channels_count=$(cat data/channels.json | grep -o '"id"' | wc -l)
            echo "  Total channels: $channels_count"
          fi
          
          if [ -f "data/summary.json" ]; then
            echo "📊 Video Statistics:"
            cat data/summary.json
          fi
      
      - name: Commit and Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add data/
            
            # 커밋 메시지 생성
            if [ -f "data/summary.json" ]; then
              channels=$(grep -o '"totalChannelsAnalyzed":[0-9]*' data/summary.json | cut -d':' -f2 || echo "0")
              videos=$(grep -o '"totalVideos":[0-9]*' data/summary.json | cut -d':' -f2 || echo "0")
              shorts=$(grep -o '"totalShorts":[0-9]*' data/summary.json | cut -d':' -f2 || echo "0")
              commit_msg="🎬 Update: ${channels} channels, ${videos} videos, ${shorts} shorts (3-key rotation)"
            else
              commit_msg="📊 Update YouTube data (3-key rotation)"
            fi
            
            git commit -m "$commit_msg"
            git push
          else
            echo "No changes to commit"
          fi
